# org-mode config
#+STARTUP: indent
#+TODO: TODO | DONE WONT

* Judoon::Web
** DONE [#A] URL widgets                                           :feature:
CLOSED: [2012-05-15 Tue 16:03]
Finish this feature
** TODO [#B] Need 2 type of publish, access-restricted, public release :feature:
** TODO [#C] no edit data, save column metadata, reload from excel :feature:vague:
** User::edit
*** TODO [#A] Need delete button for datasets
*** TODO [#A] Deon't try to upload w/o file
*** TODO [#A] Forgot username / password link
** Dataset::edit
*** TODO [#A] Allow multiple pages per ds
User may want to create multiple views of a complex dataset
** DatasetColumn::edit
*** TODO [#A] accession lost on re-annotation
I set column 1 to be a gene_symbol. Save, return to list, re-annotate: it's now a gene_id
** Login
*** TODO [#A] update Login to use proper users, i.e. from db
Catalyst::Plugin::Authorization::Roles - Role-based authorization
Catalyst::Plugin::Authorization::ACL - ACL-based authorization
*** TODO [#C] Allow alternative logins? (FB, OAuth, etc?)         :feature:
** modules for evaluation:
*** Catalyst::Controller::DBIC::API::REST
*** Catalyst::Plugin::StatusMessage
*** Catalyst::Plugin::ErrorCatcher
After new catalyst is released

** TODO [#B] Should I switch to REST::ForBrowsers?
most of our actions are pretty basic
HTML5 allows multiple forms
wierd paths:
   Page/preview  => could be /?view=preview or accept-type?
   Dataset/postadd => not sure I'm still using this
** TODO [#A] Feature: upload excel spreadsheet, automatically create page
No formatting, no annotation, dead simple.
** TODO DatasetColumn
during annotation, if user sets field as accession, create virtual column
e.g.:  {gene_symbol} => {__annotation_gene_symbol_to_gene_id}
* Judoon::DB::User::Schema
** DONE [#A] Convert DB::User to DBIC
CLOSED: [2012-03-28 Wed 13:45]
** DONE [#A] Get rid of J::DB::Users / J::W::Model::Users / tests
CLOSED: [2012-03-28 Wed 14:10]
** TODO [#A] Fill out User class to make a proper user
password, email, etc.
DBIx::Class::PassphraseColumn
Authen::Passphrase::BlowfishCrypt
http://www.catalystframework.org/calendar/2011/15
Catalyst::Authentication::Realm::SimpleDB
Catalyst::Authentication::Store::DBIx::Class
** TODO [#A] move R::User::import_data into its own module
** TODO [#A] DSColumn creation code should probably be moved into Dataset
Right now, User creates DSColumns.  That seems weird. That should be
DS's responsibility.  Also, DSColumns create their own shortname.  I
think that that's Dataset's job, since we don't want DSColumns in a
dataset to have identical shortnames.
** TODO [#C] Later may need to create a wrapper class for code that doesn't live in any one result
See http://www.perlmonks.org/?node_id=915657 for how to wrap this with a model.
E.G. create Judoon::DB::User that has => schema
** TODO [#B] create per-user databases
When a user uploads a spreadsheet, create a new database and deploy to there.
See Catalyst mailing list, "[Catalyst] Authentication in a Many Database Scenario (again)", May 15, 2012
** TODO [#A] DatasetColumns needs an order field
** TODO [#A] DatasetColumns.name should probably be called .title
PageColumns uses .title  (title seems more apropos for Columns)
what about Page or Dataset?
* Judoon::Tmpl
** DONE [#A] Fill out TemplateTranslator
CLOSED: [2012-05-15 Tue 16:14]
- Create J::Tmpl::Widget class
J::Tmpl::Widget::Text, J::Tmpl::Widget::Data, etc.
Can convert from class to html or template?
** TODO Tmpl::Translator::Dialect::WebWidgets
*** move widget-format-target into its own hidden with name widget-link-null
need to update WebWidgets.pm && library.tt
* judoon.js
** TODO Move JS into object
* Judoon::Spreadsheet::Importer
** TODO [#B] move code from J:DB::U::S::R::U::import_data() into here
* Judoon user deployment
** Look at Wordpress, drupal for quick deployment ideas
* Judoon::SiteLinker
** TODO Needs a lot more maps
** TODO Can use Uniprot ID mapper to convert ids
Then, the uniprot_acc to gene map could convert to gene_id, and use that mapping
** Would this be easier to do in a database, or more simply represented as a schema?
** TODO Need order encoded in mapping
