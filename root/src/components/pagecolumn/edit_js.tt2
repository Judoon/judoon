<script src="/static/js/vendor/jquery.json-2.3.min.js"></script>
<script src="/static/js/judoon.js"></script>
<script>
  var delay = (function(){
      var timer = 0;
      return function(callback, ms){
          clearTimeout (timer);
          timer = setTimeout(callback, ms);
      };
  })();

  var pbuild_links     = [% link_site_json %];
  var ds_columns_dict  = [% ds_column_json %];
  var sitelinker_sites = [% sitelinker_sites %];
  var sitelinker_accs  = [% sitelinker_accs %];
  var column_acctype   = [% column_acctype %];
  var sample_data      = [% sample_data %];
  var url_prefixes     = [% url_prefixes %];

  $(document).ready(function () {
    $('#btn_add_text').on(   'click', function() { judoon.canvas.widget.add('text');    } );
    $('#btn_add_data').on(   'click', function() { judoon.canvas.widget.add('data');    } );
    $('#btn_add_link').on(   'click', function() { judoon.canvas.widget.add('link');    } );
    $('#btn_add_newline').on('click', function() { judoon.canvas.widget.add('newline'); } );

    var cursor = judoon.canvas.cursor;
    $('#btn_cursor_up').on(    'click', function() {cursor.move_up();}    );
    $('#btn_cursor_down').on(  'click', function() {cursor.move_down();}  );
    $('#btn_cursor_left').on(  'click', function() {cursor.move_left();}  );
    $('#btn_cursor_right').on( 'click', function() {cursor.move_right();} );
    $('#btn_backspace').on(    'click', function() {cursor.backspace();}  );

    $('#pagecol_form').on('submit', function() { judoon.canvas.save_to_input(); });

    $('#column_canvas').on('click', 'div.widget-type-link .btn-edit-link',
       function(event) {judoon.linkbuilder.open(event.currentTarget); }
    );

    var judoon_preview = judoon.linkbuilder.preview;
    $('#link_source').on('change', function() {judoon.linkbuilder.url.accession.set_active_sitelist(); judoon_preview.update();});
    $('#link_widget_url_form').on( 'change', 'input', function() {judoon_preview.update();} );
    $('#link_widget_url_form').on( 'change', 'select', function() {judoon_preview.update();} );
    $('#link_widget_url_form').on( 'keyup', 'input', function() {delay( function() {judoon_preview.update();}, 200);} );

    $('#link_widget_label_form').on( 'change', 'input', function() {judoon_preview.update_label();} );
    $('#link_widget_label_form').on( 'change', 'select', function() {judoon_preview.update_label();} );
    $('#link_widget_label_form').on( 'keyup', 'input', function() {delay( function() {judoon_preview.update_label();}, 200);} );

    $('#linkModal_save_changes').on('click', function() {judoon.linkbuilder.submit();});

    judoon.canvas.build_widgets(
        [% page_column.object.template %]
    );


    $('#btn_preview').on('click', function() {
        var preview = '';
        judoon.canvas.get_canvas().find('div.widget-object').each(function(idx) {
            var widget_classes = $(this).attr('class');
            var widget_match   = /widget-type-([\w\-]+)/.exec(widget_classes);
            var widget_type    = widget_match[1];
            var formatting;
            var html = '';
            switch (widget_type) {
                case 'newline':
                    html = '<br>';
                    break;
                case 'newline-icon':
                    break;
                case 'text':
                    formatting = judoon.canvas.widget.extract_format($(this));
                    html = $(this).find('input').val();
                    break;
                case 'data':
                    formatting = judoon.canvas.widget.extract_format($(this));
                    html = sample_data[$(this).find('select').val()];
                    break;
                case 'link':
                    var url   = judoon.canvas.widget.get_link_attr($(this), 'url');
                    var label = judoon.canvas.widget.get_link_attr($(this), 'label');
                    formatting = judoon.canvas.widget.extract_format($(this));
                    html = '<a href="'
                        + judoon.linkbuilder.util.zip_segments(url.text_segments, [sample_data[ url.variable_segments[0] ]])
                        + '">'
                        + judoon.linkbuilder.util.zip_segments(label.text_segments, [sample_data[ label.variable_segments[0] ]])
                        + '</a>';
                    break;
            }

            if (formatting) {
               for (var i = 0; i < formatting.length; i++) {
                   if (formatting[i] === 'bold') {
                      html = '<strong>' + html + '</strong>';
                   }
                   if (formatting[i] === 'italic') {
                      html = '<em>' + html + '</em>';
                   }
               }
            } 
            preview += html;

        });
       $('#preview_column_title').html( $('#page_column_title').val() );
       $('#preview_content').html( preview );
       return false;
    });

  });
</script>
